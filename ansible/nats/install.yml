---
- name: Add nats helm support
  hosts: localhost
  connection: local
  vars:
    ns: qa
    nats_cmd_pod: nats-box
    ui_wildcard_fqdn: "*.cyverse.org"
    vice_wildcard_fqdn: "*.cyverse.run"
    vice_base_domain: cyverse.run
    ca_duration: 8766h # 1 year
    ca_renew_before: 240h # 10 days
    nats_server_cert_duration: 8766h # 1 year
    nats_server_cert_renew_before: 240h # 10 days
    nats_client_cert_duration: 8766h # 1 year
    nats_client_cert_renew_before: 240h # 10 days

  tasks:
    - name: Add nats helm repository
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.helm_repository:
        name: nats
        repo_url: https://nats-io.github.io/k8s/helm/charts/
        state: present

    - name: Create installation namespace
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.k8s:
        name: "{{ ns }}"
        state: present
        kind: namespace
        api_version: v1

    - name: create the selfsigned-ca secret
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.k8s:
        name: selfsigned-ca
        namespace: "{{ ns }}"
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: selfsigned-ca
          spec:
            isCA: true
            commonName: selfsigned-ca
            secretName: selfsigned-ca
            duration: "{{ ca_duration }}"
            renewBefore: "{{ ca_renew_before }}"
            privateKey:
              algorithm: ECDSA
              size: 256
            issuerRef:
              name: default-cluster-issuer
              kind: ClusterIssuer
              group: cert-manager.io

    - name: create the ca-issuer issuer
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.k8s:
        name: ca-issuer
        namespace: "{{ ns }}"
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Issuer
          metadata:
            name: ca-issuer
          spec:
            ca:
              secretName: selfsigned-ca

    - name: create the nats-server-tls certificate
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.k8s:
        name: nats-server-tls
        namespace: "{{ ns }}"
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: nats-server-tls
          spec:
            secretName: nats-server-tls
            duration: "{{ nats_server_cert_duration }}"
            renewBefore: "{{ nats_server_cert_renew_before }}"
            issuerRef:
              name: ca-issuer
              kind: Issuer
            usages:
              - signing
              - key encipherment
              - server auth
              - client auth
            commonName: nats.{{ ns }}.svc.cluster.local
            dnsNames:
              - localhost
              - "{{ ui_wildcard_fqdn }}"
              - "{{ vice_wildcard_fqdn }}"
              - "{{ vice_base_domain }}"
              - "*.nats.{{ ns }}.svc.cluster.local"
              - "*.nats.{{ ns }}.svc"
              - "*.nats.{{ ns }}"
              - "*.nats"
              - "*.nats-headless.{{ ns }}.svc.cluster.local"
              - "*.nats-headless.{{ ns }}.svc"
              - "*.nats-headless.{{ ns }}"
              - "*.nats-headless"
              - nats.{{ ns }}.svc.cluster.local
              - nats.{{ ns }}.svc
              - nats.{{ ns }}
              - nats

    - name: create the nats-client-tls certificate
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.k8s:
        name: nats-client-tls
        namespace: "{{ ns }}"
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: nats-client-tls
          spec:
            secretName: nats-client-tls
            duration: "{{ nats_client_cert_duration }}"
            renewBefore: "{{ nats_client_cert_renew_before }}"
            issuerRef:
              name: ca-issuer
              kind: Issuer
            commonName: nats.{{ ns }}.svc.cluster.local
            dnsNames:
              - localhost
              - "{{ ui_wildcard_fqdn }}"
              - "{{ vice_wildcard_fqdn }}"
              - "{{ vice_base_domain }}"
              - "*.nats.{{ ns }}.svc.cluster.local"
              - "*.nats.{{ ns }}.svc"
              - "*.nats.{{ ns }}"
              - "*.nats"
              - "*.nats-headless.{{ ns }}.svc.cluster.local"
              - "*.nats-headless.{{ ns }}.svc"
              - "*.nats-headless.{{ ns }}"
              - "*.nats-headless"
              - nats.{{ ns }}.svc.cluster.local
              - nats.{{ ns }}.svc
              - nats.{{ ns }}
              - nats

    - name: create the nats values file from inline content
      ansible.builtin.copy:
        content: |
          tlsCA:
            enabled: true
            secretName: selfsigned-ca
            dir: /etc/nats/tls/ca/
            ca: ca.crt

          service:
            enabled: true
            ports:
              nats:
                enabled: true
              leafnodes:
                enabled: true
              websocket:
                enabled: true
              cluster:
                enabled: true

          config:
            cluster:
              enabled: true
              noAdvertise: true
              port: 6222
              replicas: 4
              routeURLs:
                useFQDN: false
                k8sClusterDomain: cluster.local
              tls:
                enabled: true
                secretName: nats-server-tls
                dir: /etc/nats/tls/cluster/
                cert: tls.crt
                key: tls.key
            nats:
              port: 4222
              tls:
                enabled: true
                secretName: nats-client-tls
                dir: /etc/nats/tls/nats/
                cert: tls.crt
                key: tls.key
            leafnodes:
              enabled: true
              noAdvertise: true
              port: 7422
              tls:
                enabled: true
                secretName: nats-client-tls
                dir: /etc/nats/tls/leafnodes/
                cert: tls.crt
                key: tls.key
            websocket:
              enabled: true
              port: 8080
              tls:
                enabled: true
                secretName: nats-server-tls
                dir: /etc/nats/tls/websocket/
                cert: tls.crt
                key: tls.key
        dest: "./values.yaml"

    - name: Install nats helm chart
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.helm:
        name: nats
        chart_ref: nats/nats
        release_namespace: "{{ ns }}"
        wait: true
        values_files:
          - "./values.yaml"

    - name: run the nsc-init.sh bash script with the namespace as an argument
      ansible.builtin.command: "bash files/nsc-init.sh {{ ns }}"
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"

    - name: get the name of the nats-box pod
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ ns }}"
        label_selectors:
          - app.kubernetes.io/name=nats
          - app.kubernetes.io/instance=nats
          - app.kubernetes.io/component=nats-box
      register: nats_box_pod

    - name: create a download temp directory locally.
      ansible.builtin.tempfile:
        state: directory
        suffix: -downloads
      register: download_dir

    - name: copy the services.creds file from the nats-box pod to the local machine
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.k8s_cp:
        pod: "{{ nats_box_pod.resources[0].metadata.name }}"
        remote_path: /nsc/nkeys/creds/cyverse/de/services.creds
        local_path: "{{ download_dir.path }}/services.creds"
        namespace: "{{ ns }}"
        state: from_pod

    - name: create a secret named nats-services-creds containing the services.creds file
      environment:
        KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
      kubernetes.core.k8s:
        name: nats-services-creds
        namespace: "{{ ns }}"
        state: present
        definition:
          kind: secret
          api_version: v1
          type: Opaque
          data:
            services.creds: "{{ lookup('pipe', 'base64 ' + download_dir.path + '/services.creds') }}"

    - name: delete the download directory
      ansible.builtin.file:
        path: "{{ download_dir.path }}"
        state: absent
