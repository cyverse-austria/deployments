---
- ansible.builtin.stat: path=/usr/local/bin/k3s
  register: k3s_installed_vice

  #- name: run storage_fix.sh
  #ansible.builtin.shell:
  #  cmd: ./storage_fix.sh
  #  chdir: /root
  #when: k3s_use_storage_mount

- name: install k3s - no storage mount
  environment:
    INSTALL_K3S_EXEC: "agent"
    INSTALL_K3S_VERSION: "{{ k3s_version }}"
    K3S_TOKEN: "{{ k3s_token }}"
    K3S_URL: "https://{{ groups['k3s_api_proxy'][0] }}:{{ k3s_api_port }}"
  ansible.builtin.shell: /usr/local/bin/k3s_install.sh --node-label=vice=true --node-taint=vice=only:NoSchedule
  when: (not k3s_installed_vice.stat.exists or force_reinstall | bool) and not k3s_use_storage_mount

- debug:
    msg: "{{ (not k3s_installed_vice.stat.exists or force_reinstall | bool) and k3s_use_storage_mount }}"

- name: install k3s - use storage mount
  environment:
    INSTALL_K3S_EXEC: "agent"
    INSTALL_K3S_VERSION: "{{ k3s_version }}"
    K3S_TOKEN: "{{ k3s_token }}"
    K3S_URL: "https://{{ groups['k3s_api_proxy'][0] }}:{{ k3s_api_port }}"
  ansible.builtin.shell: /usr/local/bin/k3s_install.sh --kubelet-arg=root-dir={{k3s_storage_mount}}/kubelet-storage --node-label=vice=true --node-taint=vice=only:NoSchedule
  when: (not k3s_installed_vice.stat.exists or force_reinstall | bool) and k3s_use_storage_mount

- name: start k3s service
  ansible.builtin.service:
    name: k3s-agent
    state: restarted
    enabled: true
