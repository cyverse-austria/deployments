---
- delegate_to: localhost
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  block:
    - name: add the irods-config configmap
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: irods-config
            namespace: argo
          data:
            IRODS_HOST: "{{ irods_host }}"
            IRODS_PORT: "{{ irods_port | string }}"
            IRODS_USER_NAME: "{{ irods_user }}"
            IRODS_USER_PASSWORD: "{{ irods_password }}"
            IRODS_ZONE_NAME: "{{ irods_zone }}"

    - name: set up webhook event source
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: EventSource
          metadata:
            name: webhook
            namespace: argo-events
          spec:
            service:
              ports:
                - port: 80
                  targetPort: 80
            webhook:
              # event-source can run multiple HTTP servers. Simply define a unique port to start a new HTTP server
              batch-status:
                # port to run HTTP server on
                port: "80"
                # endpoint to listen to
                endpoint: /batch
                # HTTP request method to allow. In this case, only POST requests are accepted
                method: POST

              batch-cleanup:
                port: "80"
                endpoint: /batch/cleanup
                method: POST

              vice-status:
                port: "80"
                endpoint: /vice
                method: POST

    - name: set up a logging sensor for the webhook event
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Sensor
          metadata:
            name: webhook-logging
            namespace: argo-events
          spec:
            dependencies:
              - name: batch-status-dep
                eventSourceName: webhook
                eventName: batch-status
            triggers:
              - template:
                  name: log-batch-status
                  log:
                    intervalSeconds: 1

    - name: set up a cleanup sensor for the webhook event
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Sensor
          metadata:
            name: cleanup-batch-workflow
            namespace: argo-events
          spec:
            dependencies:
              - name: cleanup-batch-dep
                eventSourceName: webhook
                eventName: batch-cleanup
            triggers:
              - template:
                  name: cleanup-batch-trigger
                  http:
                    url: "http://app-exposer.{{ns}}/batch/cleanup"
                    headers:
                      Content-Type: application/json
                    payload:
                      - src:
                          dependencyName: cleanup-batch-dep
                          dataKey: body.uuid
                        dest: uuid
                    method: POST
                retryStrategy:
                  steps: 3
                  duration: 3s

    - name: set up a job-status-listener sensor for the webhook event
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Sensor
          metadata:
            name: webhook-jsl
            namespace: argo-events
          spec:
            dependencies:
              - name: batch-status-dep
                eventSourceName: webhook
                eventName: batch-status
            triggers:
              - template:
                  name: send-to-job-status-listener
                  http:
                    url: "http://job-status-listener.{{ns}}/status/batch"
                    headers:
                      Content-Type: application/json
                    payload:
                      - src:
                          dependencyName: batch-status-dep
                          dataKey: body.job_uuid
                        dest: job_uuid
                      - src:
                          dependencyName: batch-status-dep
                          dataKey: body.hostname
                        dest: hostname
                      - src:
                          dependencyName: batch-status-dep
                          dataKey: body.message
                        dest: message
                      - src:
                          dependencyName: batch-status-dep
                          dataKey: body.state
                        dest: state
                    method: POST
                retryStrategy:
                  steps: 3
                  duration: 3s
