---
- delegate_to: localhost
  block:
    - name: create the de_releases database
      community.postgresql.postgresql_db:
        login_host: "{{ groups['dbms'][0] }}"
        port: "{{ pg_listen_port }}"
        login_user: "{{ pg_login_user }}"
        login_password: "{{ pg_login_password }}"
        name: "de_releases"
        owner: "{{ dbms_connection_user }}"
        encoding: "{{ encoding }}"
        lc_collate: "{{ lc_collate }}"
        lc_ctype: "{{ lc_ctype }}"
        template: "{{ template }}"
      when: create_dbs is defined and create_dbs

    - name: install uuid-ossp for the de_releases database
      community.postgresql.postgresql_ext:
        login_host: "{{ groups['dbms'][0] }}"
        port: "{{ pg_listen_port }}"
        login_user: "{{ pg_login_user }}"
        login_password: "{{ pg_login_password }}"
        db: "de_releases"
        name: "uuid-ossp"
      when: install_exts is defined and install_exts

    - name: install moddatetime for the de_releases database
      community.postgresql.postgresql_ext:
        login_host: "{{ groups['dbms'][0] }}"
        port: "{{ pg_listen_port }}"
        login_user: "{{ pg_login_user }}"
        login_password: "{{ pg_login_password }}"
        db: "de_releases"
        name: "moddatetime"
      when: install_exts is defined and install_exts

    - name: checkout the mgmt repo for the de_releases schema
      ansible.builtin.git:
        repo: "https://github.com/cyverse-de/mgmt"
        dest: "{{ dbs_dir.path }}/mgmt"
        clone: yes
        update: yes
        force: yes
        version: "{{ mgmt_version }}"

    - name: run mgmt db migrations
      ansible.builtin.command: >
        {{migrate_installed.stdout}}
        -database "postgresql://{{dbms_connection_user}}:{{dbms_connection_pass}}@{{ groups['dbms'][0] }}:{{ pg_listen_port }}/de_releases?sslmode=disable"
        -path "{{ dbs_dir.path }}/mgmt/db/migrations"
        up
      when: migrate is defined and migrate
