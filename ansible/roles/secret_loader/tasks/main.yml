---
- delegate_to: localhost
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  block:
    - ansible.builtin.set_fact:
        repo_dir: "{{ inventory_dir | dirname }}"
    - ansible.builtin.set_fact:
        secrets_dir: "{{ [repo_dir, secrets_loader_base_dir] | path_join }}/"
    - debug:
        msg: "repo dir: '{{ repo_dir }}', secrets_dir: '{{ secrets_dir }}'"
    - name: create secret ui-nginx-tls secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: ui-nginx-tls
            namespace: "{{ ns }}"
          type: kubernetes.io/tls
          data:
            tls.crt: "{{ lookup('file', secrets_dir + secrets_loader_ui_tls_cert_filepath ) | b64encode }}"
            tls.key: "{{ lookup('file', secrets_dir + secrets_loader_ui_tls_key_filepath) | b64encode }}"
      when: secrets_loader_load_ui_secret

    - name: generate gpg data
      set_fact:
        gpg_data: "{{ gpg_data | default({}) | combine({ item | basename : lookup('file', secrets_dir + item) | b64encode }) }}"
      with_items: "{{ secrets_loader_gpg_filepaths }}"
      when: secrets_loader_load_gpg_secret

    - name: load gpg secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ secrets_loader_gpg_secret }}"
            namespace: "{{ ns }}"
          data: "{{ gpg_data }}"
      when: secrets_loader_load_gpg_secret

    - set_fact:
        pgpass_data: "{{ pgpass_data | default({}) | combine({ item | basename : lookup('file', secrets_dir + item) | b64encode }) }}"
      with_items: "{{ secrets_loader_pgpass_filepaths }}"
      when: secrets_loader_load_pgpass_secret

    - name: load pgpass secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ secrets_loader_pgpass_secret }}"
            namespace: "{{ ns }}"
          data: "{{ pgpass_data }}"
      when: secrets_loader_load_pgpass_secret

    - set_fact:
        signing_keys_data: "{{ signing_keys_data | default({}) | combine({ item | basename : lookup('file', secrets_dir + item) | b64encode }) }}"
      with_items: "{{ secrets_loader_signing_keys_filepaths }}"
      when: secrets_loader_load_signing_keys_secret

    - name: load signing keys secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ secrets_loader_signing_keys_secret }}"
            namespace: "{{ ns }}"
          data: "{{ signing_keys_data }}"
      when: secrets_loader_load_signing_keys_secret

    - set_fact:
        accepted_keys_data: "{{ accepted_keys_data | default({}) | combine({ item | basename : lookup('file', secrets_dir + item, rtrim=false) | b64encode }) }}"
      with_items: "{{ secrets_loader_accepted_keys_filepaths }}"
      when: secrets_loader_load_accepted_keys_secret

    - name: load accepted keys secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ secrets_loader_accepted_keys_secret }}"
            namespace: "{{ ns }}"
          data: "{{ accepted_keys_data }}"
      when: secrets_loader_load_accepted_keys_secret

    - set_fact:
        ssl_data: "{{ ssl_data | default({}) | combine({ item | basename : lookup('file', secrets_dir + item) | b64encode }) }}"
      with_items: "{{ secrets_loader_ssl_filepaths }}"
      when: secrets_loader_load_ssl_secret

    - name: load ssl secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ secrets_loader_ssl_secret }}"
            namespace: "{{ ns }}"
          data: "{{ ssl_data }}"
      when: secrets_loader_load_ssl_secret
