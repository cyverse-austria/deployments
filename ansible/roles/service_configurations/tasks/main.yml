---
- name: clone the de-releases repository to the configured path.
  delegate_to: localhost
  ansible.builtin.git:
    repo: "{{ de_releases_repo }}"
    version: "{{ de_releases_version }}"
    dest: "{{ de_releases_dir }}"
    clone: true
    force: true
    update: true

- name: get the list of templates from the template directory
  delegate_to: localhost
  ansible.builtin.find:
    paths: "{{ de_releases_dir}}/templates"
    patterns: "*.j2"
    file_type: file
  register: template_list

- name: create a directory to output the rendered config files.
  delegate_to: localhost
  ansible.builtin.file:
    path: "{{ rendered_configs_dir }}"
    state: directory

- name: render each template
  delegate_to: localhost
  ansible.builtin.template:
    src: "{{ item.path }}"
    dest: "{{ [[ rendered_configs_dir ] + [item.path | basename | splitext | first]] | flatten | path_join }}"
    mode: 0640
  loop: "{{ template_list.files }}"

- name: load configmap data
  set_fact:
    config_data: "{{ config_data | default({}) | combine({ item | basename : lookup('file', item) }) }}"
  with_fileglob: "{{ rendered_configs_dir }}/*"

- name: load the configurations into the cluster
  delegate_to: localhost
  run_once: True
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: service-configs
        namespace: "{{ ns }}"
      data: "{{ config_data }}"
  
- name: remove the locally rendered files
  delegate_to: localhost
  run_once: True
  ansible.builtin.file:
    path: "{{ rendered_configs_dir }}"
    state: absent

