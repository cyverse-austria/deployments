---
- name: Setup DB
  hosts: localhost
  connection: local
  roles:
    - role: k3s_db

- name: Install Docker
  hosts: k3s_nodes
  become: true
  roles:
    - role: cyverse.docker

- name: install wireguard
  hosts: k3s_nodes
  become: true
  tasks:
    - name: install wireguard
      ansible.builtin.package:
        name: wireguard
        state: present

- name: Install HAProxy
  hosts: k8s_api_proxy
  roles:
    - role: k8s_haproxy

- name: Open Ports
  hosts: k3s_nodes
  become: true
  tasks:
    - community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      loop:
        - port: 6443 # required for k3s api
          proto: tcp
        - port: 10250 # kubelet metrics
          proto: tcp
        - port: 51820:51821 # wireguard
          proto: udp
        - port: 30000:32767 # nodePorts
          proto: tcp

- name: Open Pods and Services ports
  hosts: k3s_nodes
  become: true
  tasks:
    - communit.general.ufw:
        rule: allow
        src: "{{ item }}"
      loop:
        - 10.42.0.0/16 # k3s pods
        - 10.43.0.0/16 # k3s services

- name: download k3s installation script locally.
  hosts: localhost
  connection: local
  tasks:
    - name: download k3s installation script
      ansible.builtin.get_url:
        url: https://get.k3s.io"
        dest: "./k3s_install.sh"
        mode: "a+x"

- name: upload installation script to k3s nodes
  hosts: k3s_nodes
  tasks:
    - name: upload k3s installation script
      ansible.builtin.copy:
        src: "./k3s_install.sh"
        dest: "/tmp/k3s_install.sh"
        mode: "a+x"

- name: copy registries.yaml to k3s nodes
  hosts: k3s_nodes
  tasks:
    - name: copy registries.yaml
      ansible.builtin.template:
        src: "templates/registries.yaml"
        dest: "/etc/rancher/k3s/registries.yaml"
        owner: root
        group: root
        mode: "0644"

- name: set up k3s control nodes
  hosts: k3s_controllers
  become: true
  tasks:
    - name: install k3s
      environment:
        INSTALL_K3S_EXEC: "server"
        K3S_TOKEN: "{{ k3s_token }}"
        K3S_DATASTORE_ENDPOINT: "{{ k3s_datastore_endpoint }}"
        K3S_KUBECONFIG_OUTPUT: "{{ k3s_kubeconfig_output }}"
        K3S_KUBECONFIG_MODE: "{{ k3s_kubeconfig_mode }}"
      ansible.builtin.shell: /tmp/k3s_install.sh --flannel-backend={{ k3s_flannel_backend }}
      loop: "{{ groups['k3s_controllers'] }}"

- name: set up k3s DE worker nodes
  hosts: k3s_de_workers
  become: true
  tasks:
    - name: install k3s
      environment:
        INSTALL_K3S_EXEC: "agent"
        K3S_TOKEN: "{{ k3s_token }}"
        K3S_URL: "https://{{ groups['k3s_controllers'][0] }}:6443"
      ansible.builtin.shell: /tmp/k3s_install.sh
      loop: "{{ groups['k3s_de_workers'] }}"

- name: set up k3s VICE worker nodes
  hosts: k3s_vice_workers
  become: true
  tasks:
    - name: install k3s
      environment:
        INSTALL_K3S_EXEC: "agent"
        K3S_TOKEN: "{{ k3s_token }}"
        K3S_URL: "https://{{ groups['k3s_controllers'][0] }}:6443"
      ansible.builtin.shell: /tmp/k3s_install.sh --node-label=vice=true --node-taint=vice=true:NoSchedule
      loop: "{{ groups['k3s_vice_workers'] }}"

- name: set up k3s GPU worker nodes
  hosts: k3s_gpu_workers
  become: true
  tasks:
    - name: install k3s
      environment:
        INSTALL_K3S_EXEC: "agent"
        K3S_TOKEN: "{{ k3s_token }}"
        K3S_URL: "https://{{ groups['k3s_controllers'][0] }}:6443"
      ansible.builtin.shell: /tmp/k3s_install.sh --node-label=gpu=true --node-taint=vice=true:NoSchedule
      loop: "{{ groups['k3s_gpu_workers'] }}"
